#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim: set hls is ai et sw=4 sts=4 ts=8 nu ft=python:

# Additional modules
import boto.swf.layer2

# local modules
try:
    import config
except ImportError:
    import config_default as config


boto.swf.layer2.set_default_credentials('AKIAIRSEZZD65TO5HMEQ', 'noypU8kfm51MB1FOkMNBAz0UuYNfJYijWALAH6Kx')


class TranscodeWorkflowDecider(boto.swf.layer2.Decider):
    domain = config.DOMAIN
    task_list = 'default'
    version = '1.0'

    def run(self):
        history = self.poll()
        print history
        # Find workflow events not related to decision scheduling.
        workflow_events = [e for e in history['events']
                           if not e['eventType'].startswith('Decision')]
        last_event = workflow_events[-1]

        decisions = boto.swf.layer2.Layer1Decisions()
        if last_event['eventType'] == 'WorkflowExecutionStarted':
            decisions.schedule_activity_task('do_inspection', 'source_inspection', self.version, self.task_list)
        elif last_event['eventType'] == 'ActivityTaskCompleted':
            decisions.complete_workflow_execution()
        self.complete(decisions=decisions)
        return True
